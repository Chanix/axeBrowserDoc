{"./":{"url":"./","title":"简介与说明","keywords":"","body":"axeBrowser 简介与说明 axeBrowser is a browser, automatically, extendedly, easily. axeBrowser 是一个浏览器，可以方便的进行功能扩展和自动化操作。 免费下载 功能和特点 内置浏览器，提供 JavaScript 运行环境； 提供内置扩展对象供 JavaScript 调用，扩展功能； 多种运行模式（命令行模式、图形应用模式，调试模式）； Javascript 可操作所有 DOM、window 等浏览器中才有的对象。 用途和作用 axeBrowser 本质上是一个通过浏览器环境提供 javascript 运行环境的脚本执行工具，从某种意义上而言和 node.js 很类似。 对作者而言，开发 axeBrowser 是为了满足自动化测试的需求； 一些用户用来自动化操作，提高工作效率； 一些用户用来运行和分发一些 javascript 应用； …… 具体能做什么，取决于您的想象力，您可以在范例中看到一些例子。 已知功能限制 axeBrowser 的功能限制主要源于两个方面，开发工具（32位程序）和内置的浏览器（miniblink）。 仅支持 Windows （xp 以上版本）； 不支持涉及视频、音频（不包括 flash 播放器）； 单个进程最大 2G 内存； 风险与安全漏洞 为了更好的实现功能扩展和自动化操作，axeBrowser 没有遵循浏览器的沙盒安全策略。对于安全软件来说，axeBrowser 既然是浏览器，而又存在调用本地资源的行为，那么就存在安全漏洞。因此很多杀毒和防护软件会报告存在病毒木马行为。这是软件的功能和运行机制决定的，并非含病毒。 axeBrowser 提供了脚本运行环境，但无法保证执行的脚本的功能和目的。如果 axeBrowser 执行了存在恶意代码的脚本，那么就会造成安全隐患，可能带来非常严重的后果。 许可与费用 axeBrowser 是免费软件，使用 MIT 协议。再次重申，对于本软件的使用和可能造成的后果请您自行承担。当然，如果您觉得对您有用，愿意请我喝杯茶，那会是一种更大的激励。 使用本软件即表明您已经明确了解风险并对可能造成的后果自行负责。正如用菜刀进行非法行为是使用者的问题，非刀的问题，更不是制造商的问题。 对于软件的使用和可能造成的后果，axeBrowser 不进行任何明示的或者暗示的担保，亦不承担任何责任和义务（无论是法律上的或者是道义上的）。 仅保证，尽可能开发并完善 axeBrowser。 更多信息 软件主页：http://www.axeBrowser.com "},"history.html":{"url":"history.html","title":"下载与历史","keywords":"","body":"下载与历史 正在进行中的工作： 重构 dll 与 控件 包装调用代码； 升级 miniblink 和相关控件； 2020/06/01 增加 VLC 支持（32位）； 提升稳定运行时间，查找崩溃原因； 修正命令行参数 referer 处理错误（该错误导致某些情况下设置失败）； 修正打开主页网址时，网址输入框显示延迟的错误； 增加命令行参数 dpi，提供自动缩放选择，改善高分辨率下的窗口显示； 完善设置窗口标题的处理逻辑，注册版将不再显示版本信息，便于二次开发应用的分发； 修正浏览器网址输入框的显示错误； 调整和美观窗体布局； GitHub 下载 2020/05/25 修正标题显示网址错误； 增加 flash 支持（32位）； 取消读写文件时的路径限制（用户反馈既然可以绕过，何必再脱裤子放屁~~~）； 重构扩展功能 “设置窗口标题”； 重构 dll 与 控件 包装调用代码； 提升稳定运行时间（水平有限，导致未能无缝整合，程序运行一段时间后可能会随机崩溃出现）； GitHub 下载 2020/05/21 增加命令行参数 width，指定浏览器的宽度； 增加命令行参数 height，指定浏览器的高度； 修正注册码可能验证失败的问题； 提升稳定运行时间（由于个人水平问题，程序运行一段时间后，有发生崩溃的情况）； 取消百度网盘提供下载； GitHub 下载 2020/05/18 彻底重新整理和编译，初始化版本。 GitHub 下载 "},"how_to_run.html":{"url":"how_to_run.html","title":"运行流程","keywords":"","body":"运行流程 axeBrowser 运行流程如下： 程序初始化 打开首页 装载并运行脚本 调用入口函数 系统消息处理 请注意： 本应用是一个窗口程序，因此运行后会等待用户关闭窗口，不会自动退出（）。 若欲退出，需要在 js 脚本中显式的调用 window.external.axe.exit() 即可。 也可使用 -timeout 参数指定运行一段时间后自动强制退出。 "},"args.html":{"url":"args.html","title":"命令行参数","keywords":"","body":"命令行参数 axeBrowser 在不断的更新和完善中，因此命令行参数也会有修改和增减。请随时关注最新的文档说明。 runas 指定运行模式，默认为 debug。 值 说明 console 命令行模式，仅显示终端字符界面窗口。主要在作为自动化工具时使用。 app 应用模式，图形窗口模式。不显示浏览器功能界面。主要在作为窗口应用时使用。 debug 调试模式，打开图形窗口，提供简单的浏览器功能界面。主要在开发调试时使用。 home 指定自动首页网址，默认为 axeBrowser.com。完成初始化后，axeBrowser 会自动打开这个网址。 script 指定自动装载的 JavaScript 脚本或 JavaScript 脚本列表。（文件名之间以 \",\" 或 \";\" 进行分隔。）默认为空。 打开首页后，axeBrowser 会按照先后顺序读取文件内容，并合并为一段代码在浏览器环境中的匿名函数中执行。 程序会在每个 js 文件内容的末尾加上 “\\n;\\n”，避免问题。 可以利用脚本列表，将不同功能的 JavaScript 代码放在不同的 js 文件中，以达到“模块化”的目的（注：打了双引号的，不是真的模块化）。 举个例子： axeBrowser -script js1.js,js2.js,js3.js js1.js window.external.axe.log('this is js1.js') js2.js window.external.axe.log('this is js2.js'); js3.js window.external.axe.log('this is js3.js'); 最终合并并执行的 JavaScript 代码是： window.external.axe.log('this is js1.js') ; window.external.axe.log('this is js2.js'); ; window.external.axe.log('this is js3.js'); ; entrypoint 指定自动调用的 JavaScript 入口函数的函数名，默认为空。该函数必须在 script 参数指明的脚本中被预先定义。入口函数不支持参数。 举个例子： axeBrowser -script js1.js -entrypoint doStart function fn_test_log(a, b) { window.external.axe.log(a, b); } function doStart() { fn_test_log('111', '222'); } 最终合并并执行的 JavaScript 代码是： function fn_test_log(a, b) { window.external.axe.log(a, b); } function doStart() { fn_test_log('111', '222'); } ; doStart(); referer 指定浏览器访问首页时使用的来源地址（即 header 中的 referer），默认为空。 useragent 指定访问资源时使用的用户代理标识。默认值为：默认内嵌浏览器控件的值 + axeBrowser/版本号。 proxy 指定访问资源时使用的代理服务器地址，默认为空（即不使用代理服务器）。 wait_mode 指定等待首页加载完毕的模式。axeBrowser 将在首页装载完毕后，进行后继的调用脚本、调用入口函数等工作。默认值为 waitdoc。 值 说明 nowait 不等待。 wait 指定本参数后，可以通过 -wait_url 和 -wait_timeout 来指定等待的网址和超时时间。默认 wait_url 为空，wait_timeout 为 5000 毫秒。 waitdoc 等 document 元素加载完毕。 注意，本参数需要按照具体使用环境来选择。详细说明请参见其他相关文档。举个例子：在很多动态装载的网页中， 虽然网页装载已经完成了，满足 waitdoc 条件，但还需运行 js 代码才有进一步的内容。在这种情况下，就可能需要使用 wait 模式来等待一段时间。 timeout 指定执行超时时间，单位为毫秒，默认为空。运行超过指定时间后将应用自动退出。超时时间从程序初始化完成后开始计算。 width 设置浏览器窗口的宽度。参数值为一个整数，取值范围为 100 ~ 65535。 height 设置浏览器窗口的高度。参数值为一个整数，取值范围为 100 ~ 65535。 "},"jscall.html":{"url":"jscall.html","title":"JavaScript 扩展","keywords":"","body":"JavaScript 扩展 axeBrowser 在不断的更新和完善中，因此内置的扩展也会有修改和增减。在进行修改和增减时，会尽量的保持兼容性，使原有的脚本无需进行修改。请随时关注最新的文档说明。 axe axeBrowser 为浏览器提供了一个扩展对象 axe。JavaScript 可以通过 window.external.axe 获得，并通过这个扩展对象对功能进行扩展。 可以通过这个扩展对象，判断当前是否属于 axeBrowser 环境并获取详细信息。 例如： var AXE = window.external.axe; if (AXE == null) { alert('请检查：当前运行环境似乎不是 axeBrowser ？'); } else { alert(AXE); } 注意：在后继章节中，将使用 AXE 作为 “window.external.axe” 的缩写。 axe.getArgv 定义和用法 用于提取执行 axeBrowser 时，指定的命令行参数值。 window.external.axe.getArgv(arg_name) 参数 描述 arg_name 字符串，命令行参数的名称 返回值 一个字符串，值为指定命令行参数的值。若没有指定该参数，则返回 null。若指定了该参数，但没有定义值，则返回空字符串。 提示 由于特殊字符和命令行环境的存在，指定命令行参数时，请按实际情况进行转义。建议用双引号 “\"” 将参数值包含起来。 实例 命令行： axeBrowser -home qq.com -p1 test1 -p2; 调用值 返回值 描述 AXE.getArgv('home') 'qq.com' 指定了参数指定了值 AXE.getArgv('p1') 'test1' 指定了参数指定了值 AXE.getArgv('p2') '' 指定了参数，没有指定值，返回空字符串 AXE.getArgv('home') null 没有指定参数，返回 null axe.log 定义和用法 在命令行窗口中显示日志，如果命令行窗口没有打开将自动打开。支持多个参数，显示时多个参数间使用制表符分隔，并且在最后换行。 window.external.axe.log(p1, p2, p3 ...) 参数 描述 p1, p2, p3 ... 要显示的内容，可以为变量或者表达式 返回值 无 提示 如果参数不是字符串类型，那么将试图自动转换为字符串后再显示。 实例 脚本： window.external.axe.log(); window.external.axe.log('This is a string'); window.external.axe.log(null); window.external.axe.log('String', 12345, null, 4+5, 'Str'=='Str'); 输出： This is a string String 12345 null 9 true axe.exit 定义和用法 发送程序终止消息，立即退出 axeBrowser。 window.external.axe.exit() 参数 描述 无 返回值 无 实例 window.external.axe.exit(); axe.exec 定义和用法 异步调用外部程序，调用后将立即返回并执行后继代码。 window.external.axe.exec(program, args = '') 参数 描述 program 程序路径或系统命令 args 调用外部程序时传递的参数，默认值为空字符串 返回值 无 实例 window.external.axe.log('before'); window.external.axe.exec('notepad.exe'); window.external.axe.log('after'); axe.execWait 定义和用法 同步调用外部程序，调用后脚本将挂起并等待外部程序执行完毕后，再执行后继代码。 window.external.axe.execWait(program, args = '') 参数 描述 program 程序路径或系统命令 args 调用外部程序时传递的参数，默认值为空字符串 返回值 无 实例 window.external.axe.log('before'); window.external.axe.execWait('notepad.exe'); window.external.axe.log('after'); axe.toString 定义和用法 扩展对象 axe 进行字符串序列化，返回 axe 扩展对象的名称和版本信息。 window.external.axe.toString() 参数 描述 无 返回值 字符串，说明 axe 对象的名称和版本。 实例 alert(window.external.axe); alert(window.external.axe.toString()); axe.setTitle 定义和用法 设置窗口标题，包括浏览器窗口标题和命令行终端窗口标题。命令行窗口会附加“[console]”字样。如果使用的 axeBrowser 没有注册，则还会附加“【未注册】”字样。 window.external.axe.setTitle(title) 参数 描述 title 字符串，将设置为窗口的标题。 返回值 无 实例 window.external.axe.setTitle('这是由 JavaScript 设置的窗口标题'); axe.scrollPos 定义和用法 改变浏览器窗口的滚动条位置，可使用负数指定相对于右下角的坐标，-1,-1表示滚动到页面右、下角。 window.external.axe.scrollPos(x, y) 参数 描述 x 数值，横向滚动条的位置。 y 数值，纵向滚动条的位置。 返回值 无 实例 window.external.axe.scrollPos(-1, -1); 滚动条移动到右下角的位置。 axe.file 所有相关本地文件操作的功能都归并在 axe.file 中。 axe.file.readString 定义和用法 以字符串方式读取指定文件，注意该函数将一次性读取文件全部内容到内存后再返回，请不要读取过大的文件。 window.external.axe.file.readString(filename); 参数 描述 filename 要进行读操作的文件名 返回值 字符串形式的文件本文内容。如果指定的文件读取失败（例如安全权限限制、文件不存在等），则返回 null。 实例 window.external.axe.file.readString('readme.txt'); axe.file.writeString 定义和用法 将指定的内容以字符串方式写入文件，可以指定追加或者覆盖模式。执行时会自动创建所需的所有文件夹。 window.external.axe.file.writeString(filename, content, ifAppend = false); 参数 描述 filename 要进行写操作的文件名 content 要写入的文本内容 ifAppend 是否追加模式，默认为否，即覆盖模式。 返回值 写入成功返回 true，否则返回 false。 实例 window.external.axe.file.writeString('readme.txt', 'this is a test for append.', true); window.external.axe.file.writeString('readme.txt', 'this is a test for overwrite.'); "},"example.html":{"url":"example.html","title":"应用范例","keywords":"","body":"应用范例 获取bing每日壁纸并保存 "},"examples/get_bing_bg.html":{"url":"examples/get_bing_bg.html","title":"获取bing每日壁纸并保存","keywords":"","body":"获取bing每日壁纸并保存 将以下内容保存为 get_bing_bg.js，存放在 axeBrowser.exe 所在文件夹： // 设置变量 AXE，方便调用。 var AXE = window.external.axe; // 显示日志，运行开始。 AXE.log('>>> START'); // 设置窗口标题 AXE.setTitle('获取并保存Bing背景壁纸'); // 获得背景图的网址 var imgurl = document.getElementById('bgLink').href; // 拼凑出保存的文件名：YYYY-MM-DD.jpg var dateToday = new Date(); var filename = dateToday.getFullYear() + '-' + (dateToday.getMonth() + 1) + '-' + dateToday.getDate() + '.jpg'; // 同步调用 curl.exe（Win10 中自带） 来下载并保存图片。 AXE.execWait('curl', '\"' + imgurl + '\" -o \"' + filename + '\"'); // 显示日志，运行完毕。 AXE.log(' 打开命令行窗口，切换到 axeBrowser.exe 所在文件夹，执行命令： .\\axeBrowser -home \"https://cn.bing.com\" -script \"get_bing_bg.js\" -runas console "},"faq.html":{"url":"faq.html","title":"常见问题与解答","keywords":"","body":"常见问题与解答 axeBrowser 内置的浏览器是什么？ axeBrowser 使用的内置浏览器为 miniblink。miniblink 的首页 http://miniblink.net。 axeBrowser 用什么语言开发的？ axeBrowser 开发所使用的语言和工具是 aardio。aardio 的首页 http://aardio.com。 支持 TypeScript 吗？ miniblink 支持的我们都支持 :)。 支持 WASM 吗？ miniblink 支持的我们都支持 :)。 axeBrowser 是 32 位还是 64 位的？ 32 位。 可否提供 64 位版本？ 不能，受限于我们的开发工具，目前仅能提供 32 位的版本。32 位应用在 64 位系统上运行是没有问题的。而且正常情况下不太可能出现超出 32 位限制的状况吧………… 希望增加功能 请联系我们，我们会综合考虑对需求进行取舍，然后尽快的加入功能。 我们的取舍原则是“尽量的减少和简化 axeBrowser 的体积以及逻辑”。能用 JavaScript 实现的应当都尽量使用 JavaScript 来实现。实在无法满足或者顺带的，才会通过 axeBrowser 来扩展实现。 "}}